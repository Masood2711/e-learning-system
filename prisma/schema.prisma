// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String
  role      Role     @default(STUDENT)
  college   String?  // College/School name
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  enrollments Enrollment[]

  @@map("users")
}

model Course {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  instructor  String
  duration    Int      // Duration in hours
  price       Float    @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  enrollments Enrollment[]
  lessons     Lesson[]

  @@map("courses")
}

model Enrollment {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  courseId     String   @db.ObjectId
  enrollmentDate DateTime @default(now())
  status       EnrollmentStatus @default(ACTIVE)

  // Relations
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  course       Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  progress     Progress[]

  @@unique([userId, courseId])
  @@map("enrollments")
}

model Progress {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  enrollmentId         String   @db.ObjectId
  completionPercentage Int      @default(0)
  lastAccessedDate     DateTime @default(now())
  completedLessons     Int      @default(0)
  totalLessons        Int      @default(0)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relations
  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], onDelete: Cascade)

  @@map("progress")
}

model Lesson {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  courseId    String   @db.ObjectId
  title       String
  description String?
  content     String   // Lesson content (text, HTML, or markdown)
  videoUrl    String?  // Optional video URL
  duration    Int      @default(30) // Duration in minutes
  order       Int      @default(0) // Order within course
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@map("lessons")
}

enum Role {
  ADMIN
  STUDENT
}

enum EnrollmentStatus {
  ACTIVE
  COMPLETED
  CANCELLED
}
